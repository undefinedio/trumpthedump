/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

html {
  height: 100%; }

body {
  height: 100%;
  margin: 0;
  overflow: hidden; }
  body .logo.white {
    display: none; }
  body.make-it-rain {
    background: black; }
    body.make-it-rain .rain {
      opacity: 1;
      display: block; }
    body.make-it-rain .logo {
      display: none; }
    body.make-it-rain .logo.white {
      display: block; }
    body.make-it-rain header .stars {
      background: black; }
    body.make-it-rain footer {
      color: white; }

.rain {
  position: absolute;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
  pointer-events: none;
  opacity: 0;
  bottom: 0;
  top: 0;
  transition: opacity 3s; }

.rain.back-row {
  z-index: 1; }

.drop {
  position: absolute;
  bottom: 100%;
  width: 15px;
  height: 120px;
  pointer-events: none;
  animation: drop 0.5s linear infinite; }

@keyframes drop {
  0% {
    transform: translateY(0vh); }
  75% {
    transform: translateY(90vh); }
  100% {
    transform: translateY(90vh); } }

.stem {
  width: 4px;
  height: 60%;
  margin-left: 7px;
  background: linear-gradient(to bottom, rgba(255, 255, 0, 0.5), rgba(255, 255, 0, 0.8));
  animation: stem 0.5s linear infinite; }

@keyframes stem {
  0% {
    opacity: 1; }
  65% {
    opacity: 1; }
  75% {
    opacity: 0; }
  100% {
    opacity: 0; } }

.splat {
  width: 15px;
  height: 10px;
  border-top: 2px dotted rgba(255, 255, 255, 0.5);
  border-radius: 50%;
  opacity: 1;
  -ms-transform: scale(0);
      transform: scale(0);
  animation: splat 0.5s linear infinite;
  display: none; }

body.splat-toggle .splat {
  display: block; }

@keyframes splat {
  0% {
    opacity: 1;
    transform: scale(0); }
  80% {
    opacity: 1;
    transform: scale(0); }
  90% {
    opacity: 0.5;
    transform: scale(1); }
  100% {
    opacity: 0;
    transform: scale(1.5); } }

.toggles {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 3; }

.toggle {
  position: absolute;
  left: 20px;
  width: 50px;
  height: 50px;
  line-height: 51px;
  box-sizing: border-box;
  text-align: center;
  font-family: sans-serif;
  font-size: 10px;
  font-weight: bold;
  background-color: rgba(255, 255, 255, 0.2);
  color: rgba(0, 0, 0, 0.5);
  border-radius: 50%;
  cursor: pointer;
  transition: background-color 0.3s; }

.toggle:hover {
  background-color: rgba(255, 255, 255, 0.25); }

.toggle:active {
  background-color: rgba(255, 255, 255, 0.3); }

.toggle.active {
  background-color: rgba(255, 255, 255, 0.4); }

.splat-toggle {
  top: 20px; }

.back-row-toggle {
  top: 90px;
  line-height: 12px;
  padding-top: 14px; }

.single-toggle {
  top: 160px; }

body.single-toggle .drop {
  display: none; }

body.single-toggle .drop:nth-child(10) {
  display: block; }

/*--- Font-face ---*/
@font-face {
  font-family: 'MetaNormalRegular';
  src: url("/fonts/meta-normal-regular-webfont.eot");
  src: url("/fonts/meta-normal-regular-webfont.eot?#iefix") format("embedded-opentype"), url("/fonts/meta-normal-regular-webfont.woff") format("woff"), url("/fonts/meta-normal-regular-webfont.ttf") format("truetype"), url("/fonts/meta-normal-regular-webfont.svg#MetaNormalRegular") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'MetaMediumRegular';
  src: url("/fonts/meta-medium-regular-webfont.eot");
  src: url("/fonts/meta-medium-regular-webfont.eot?#iefix") format("embedded-opentype"), url("/fonts/meta-medium-regular-webfont.woff") format("woff"), url("/fonts/meta-medium-regular-webfont.ttf") format("truetype"), url("/fonts/meta-medium-regular-webfont.svg#MetaMediumRegular") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'MetaBoldRegular';
  src: url("/fonts/meta-bold-regular-webfont.eot");
  src: url("/fonts/meta-bold-regular-webfont.eot?#iefix") format("embedded-opentype"), url("/fonts/meta-bold-regular-webfont.woff") format("woff"), url("/fonts/meta-bold-regular-webfont.ttf") format("truetype"), url("/fonts/meta-bold-regular-webfont.svg#MetaBoldRegular") format("svg");
  font-weight: normal;
  font-style: normal; }

body {
  font-family: 'MetaBoldRegular', sans-serif; }

header {
  margin: auto;
  text-align: center;
  border-bottom: 3px solid #891920; }
  header .logo {
    position: relative;
    margin: auto;
    height: 70px;
    display: block;
    margin-top: 20px;
    margin-bottom: 1em;
    max-width: 500px;
    width: 75%; }
  header .stars {
    background: white;
    width: 200px;
    margin: auto;
    padding: 0 1em;
    margin-bottom: -.9em; }
    header .stars img {
      width: 100%; }

.container {
  perspective: 1000px;
  width: 90%;
  max-width: 500px;
  height: 75vh;
  margin: auto; }
  .container img {
    position: absolute;
    top: 50%;
    width: 100%;
    display: block;
    -ms-transform-origin: 50% 250px;
        transform-origin: 50% 250px;
    transition: 1s all;
    transform: rotateX(-90deg) translate(0, -50%);
    opacity: 0; }
    .container img.intro {
      transform: rotateX(0deg) translate(0, -50%);
      opacity: 1; }
    .container img.outro {
      transform: rotateX(90deg) translate(0, -50%);
      opacity: 0; }

button {
  border: none;
  position: relative;
  outline: none;
  letter-spacing: 3px;
  display: block;
  margin: auto;
  margin-bottom: 2em;
  text-decoration: none;
  white-space: nowrap;
  padding: 1.5em;
  text-align: center;
  color: #ffffff;
  text-transform: uppercase;
  font-size: .85em;
  background: #29387f;
  transition: all 0.22s cubic-bezier(0.23, 1, 0.32, 1);
  box-shadow: #29387f 0.04em 0.04em 0, #29387f 0.08em 0.08em 0, #29387f 0.12em 0.12em 0, #29387f 0.16em 0.16em 0, #29387f 0.2em 0.2em 0, #29387f 0.24em 0.24em 0, #29387f 0.28em 0.28em 0, #29387f 0.32em 0.32em 0, #29387f 0.36em 0.36em 0, #29387f 0.4em 0.4em 0, #29387f 0.44em 0.44em 0, #29387f 0.48em 0.48em 0; }
  button:after {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    bottom: -0.48em;
    right: -0.48em; }
  button:active {
    -ms-transform: translate(0.48em, 0.48em);
    transform: translate(0.48em, 0.48em);
    box-shadow: none;
    text-shadow: none;
    background: #3549a6; }
    button:active img.point {
      display: inline-block; }
    button:active img.fist {
      display: none; }
  button img {
    height: 30px;
    display: inline-block;
    vertical-align: -10px;
    position: relative; }
    button img.point {
      display: none; }

.counter {
  padding-top: 50px;
  display: block;
  margin: auto;
  text-align: center; }

.header {
  width: 100%;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
  height: 2em;
  animation: come-in .5s;
  animation-fill-mode: both;
  animation-delay: 2s;
  z-index: 15; }
  .header a {
    color: #f92a6c; }
  .header .fb-like,
  .header .twitter-share-button,
  .header p {
    font-size: 1em;
    margin: 0;
    display: inline-block;
    vertical-align: middle;
    margin-left: 1em; }

@media (max-width: 800px) {
  .header {
    display: block;
    text-align: center; }
    .header p {
      margin: auto 1em;
      margin-top: 1em; } }

footer {
  position: absolute;
  bottom: 0;
  width: 100%; }

/*# sourceMappingURL=data:application/json;base64, */
